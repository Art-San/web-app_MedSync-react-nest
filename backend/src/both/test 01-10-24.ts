// const { Telegraf, Scenes, session, Markup } = require('telegraf');
// const { BaseScene, Stage } = Scenes;
// const { format } = require('date-fns');

// // –°–æ–∑–¥–∞–µ–º —Å—Ü–µ–Ω—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
// const bookingListScene = new BaseScene('bookingList');

// bookingListScene.enter(async (ctx) => {
//   const chatId = ctx.from.id;
//   // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
//   const bookings = await getBookingsForUser(chatId); // –†–µ–∞–ª–∏–∑—É–π—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é

//   if (bookings.length === 0) {
//     await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π.');
//     return ctx.scene.leave();
//   }

//   // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
//   const buttons = bookings.map((booking) => {
//     const dateStr = format(new Date(booking.bookingDateTime), 'dd MMMM');
//     const description = booking.doctor
//       ? `üë®‚Äç‚öïÔ∏è ${dateStr} - ${booking.doctor.fullName}`
//       : `üî¨ ${dateStr} - ${booking.diagnostic.typeName}`;

//     return [Markup.button.callback(description, `show_booking_${booking.bookingId}`)];
//   });

//   // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞
//   buttons.push([Markup.button.callback('–í—ã—Ö–æ–¥', 'exit_show_bookings')]);

//   await ctx.reply('–í–æ—Ç –≤–∞—à —Å–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:', Markup.inlineKeyboard(buttons));
// });

// bookingListScene.action(/show_booking_(.+)/, async (ctx) => {
//   const bookingId = ctx.match[1];
//   ctx.scene.state.bookingId = bookingId;
//   await ctx.scene.enter('bookingDetails');
// });

// bookingListScene.action('exit_show_bookings', async (ctx) => {
//   await ctx.reply('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π.');
//   await ctx.scene.leave();
// });

// // –°–æ–∑–¥–∞–µ–º —Å—Ü–µ–Ω—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
// const bookingDetailsScene = new BaseScene('bookingDetails');

// bookingDetailsScene.enter(async (ctx) => {
//   const bookingId = ctx.scene.state.bookingId;
//   // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
//   const bookingInfo = await getBookingDetails(bookingId); // –†–µ–∞–ª–∏–∑—É–π—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é

//   const bookingTime = format(new Date(bookingInfo.bookingDateTime), 'dd MMMM yyyy, HH:mm');

//   const appointmentTypeText = bookingInfo.doctor
//     ? `üë®‚Äç‚öïÔ∏è –í—Ä–∞—á: ${bookingInfo.doctor.fullName}\n`
//     : `üî¨ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: ${bookingInfo.diagnostic.typeName}\n`;

//   const message = `üìã ID –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ${bookingInfo.bookingId}\n` +
//     `${appointmentTypeText}` +
//     `üìÜ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: ${bookingTime}\n\n` +
//     `üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: ${bookingInfo.location.name}: ${bookingInfo.location.address}\n\n` +
//     `–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à —Å–µ—Ä–≤–∏—Å! –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –≤—Å—Ç—Ä–µ—á—É, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è. üìû`;

//   await ctx.reply(message, Markup.inlineKeyboard([
//     [Markup.button.callback('–ù–∞–∑–∞–¥', 'back_to_list')],
//   ]));
// });

// bookingDetailsScene.action('back_to_list', async (ctx) => {
//   await ctx.scene.enter('bookingList');
// });

// // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ü–µ–Ω—É –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –µ–µ
// const stage = new Stage([bookingListScene, bookingDetailsScene]);
// const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);

// bot.use(session());
// bot.use(stage.middleware());

// // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
// bot.start(async (ctx) => {
//   await ctx.scene.enter('bookingList');
// });

// // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
// bot.catch((err, ctx) => {
//   console.error(`–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞–ø–¥–µ–π—Ç–∞ ${ctx.updateType}`, err);
// });

// // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
// bot.launch();
